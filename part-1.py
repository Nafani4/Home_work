"""
Стандартный поток ввода
stdin (№0) -> input()

Стандартный поток вывода
stdout (№1) -> print()

Стандартный поток ошибок
stdrr (№2) -> ошибки интерпретатора

В стандартном модуле sys доступны все эти потоки sys.stdin, sys.stdout, sys.stdrr
"""

"""
Работа с файлами

функция open(filename, mode)

Режимы(mode) записи:
w - перезапись
a - дозапись в конец
х - эксклюзивное создание файла
"""
f = open('out.txt', 'w')
f.write('123\n')
f.write('456') #Запишет в файле 123456 (нет переноса строк, идёт запись подряд)
#f.whitelines(['c', 'd'])
f.write('\rtest') # вернуть каретку назад
f.close() #необходимо закрывать открытые файлы, иначе непонятно как его закроет сам Питон

# Как открыть файл в режиме чтения. r - режим чтения (режим по умолчанию). w+, a+, x+
# t- текстовый режим -> open('out.txt', 'wt') возвращаются строки в оникоде
# b - бинарный режим -> open('1.mp3', 'rb') возвращаются байтовые строчки

f = open ('out.txt') 
print('Как прочитать файл в строку целиком\n')
content = f.read()
print (content)
print('Как прочитать файл в список')
f.seek(0)
content = f.readlines()
print (content)
f.seek(0)
print('Как прочитать файл построчно')
line = f.readline()
print(line)
line = f.readline()
print(line)
for line in f:
    print(line.strip())
f.seek(0)
print('Как прочитать из файла N байт')
print(f.read(3)) #Без аргумента читает вес файл, аргумент = количество файлов
print('Как узнать позицию курсора')
print(f.tell())
f.close() # После открытия надо сразу закрывать и потом вписывать между откр и закр. Как со скобками.

# Менеджер контекста

with open ('out.txt') as f1:
    content1 = f1.read()
    print(content1)
print(f1)
print(content1, '\n')


